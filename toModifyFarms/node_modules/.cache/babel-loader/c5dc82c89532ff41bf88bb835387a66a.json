{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Blitz/Desktop/toModifyFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"C:/Users/Blitz/Desktop/toModifyFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject;import React,{useState,useMemo}from'react';import{Route,useRouteMatch}from'react-router-dom';import BigNumber from'bignumber.js';import styled from'styled-components';import{useWeb3React}from'@web3-react/core';import{Heading}from'@pancakeswap-libs/uikit';import orderBy from'lodash/orderBy';import partition from'lodash/partition';import useI18n from'hooks/useI18n';import{usePools,useBlock}from'state/hooks';import FlexLayout from'components/layout/Flex';import Page from'components/layout/Page';import PoolCard from'./components/PoolCard';import Divider from'./components/Divider';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Farm=function Farm(){var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var TranslateString=useI18n();var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var pools=usePools(account);var _useBlock=useBlock(),blockNumber=_useBlock.blockNumber;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),stackedOnly=_useState2[0],setStackedOnly=_useState2[1];var _useMemo=useMemo(function(){return partition(pools,function(pool){return pool.isFinished||blockNumber>pool.endBlock;});},[blockNumber,pools]),_useMemo2=_slicedToArray(_useMemo,2),finishedPools=_useMemo2[0],openPools=_useMemo2[1];var stackedOnlyPools=useMemo(function(){return openPools.filter(function(pool){return pool.userData&&new BigNumber(pool.userData.stakedBalance).isGreaterThan(0);});},[openPools]);return/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsxs(Hero,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Heading,{as:\"h1\",size:\"xxl\",mb:\"16px\",children:TranslateString(738,'Syrup Pool on ONA')}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:TranslateString(580,'Stake ONA to earn new tokens.')}),/*#__PURE__*/_jsx(\"li\",{children:TranslateString(486,'You can unstake at any time.')}),/*#__PURE__*/_jsx(\"li\",{children:TranslateString(406,'Rewards are calculated per block.')})]})]}),/*#__PURE__*/_jsx(\"img\",{src:\"/images/syrup.png\",alt:\"SYRUP POOL icon\",width:410,height:191})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(FlexLayout,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path),children:/*#__PURE__*/_jsx(_Fragment,{children:stackedOnly?orderBy(stackedOnlyPools,['sortOrder']).map(function(pool){return/*#__PURE__*/_jsx(PoolCard,{pool:pool},pool.sousId);}):orderBy(openPools,['sortOrder']).map(function(pool){return/*#__PURE__*/_jsx(PoolCard,{pool:pool},pool.sousId);})})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(path,\"/history\"),children:orderBy(finishedPools,['sortOrder']).map(function(pool){return/*#__PURE__*/_jsx(PoolCard,{pool:pool},pool.sousId);})})]})]});};var Hero=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  color: \",\";\\n  display: grid;\\n  grid-gap: 32px;\\n  grid-template-columns: 1fr;\\n  margin-left: auto;\\n  margin-right: auto;\\n  max-width: 250px;\\n  padding: 48px 0;\\n  ul {\\n    margin: 0;\\n    padding: 0;\\n    list-style-type: none;\\n    font-size: 16px;\\n    li {\\n      margin-bottom: 4px;\\n    }\\n  }\\n  img {\\n    height: auto;\\n    max-width: 100%;\\n  }\\n  @media (min-width: 576px) {\\n    grid-template-columns: 1fr 1fr;\\n    margin: 0;\\n    max-width: none;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.primary;});export default Farm;","map":{"version":3,"sources":["C:/Users/Blitz/Desktop/toModifyFarms/src/views/Pools/Syrup.tsx"],"names":["React","useState","useMemo","Route","useRouteMatch","BigNumber","styled","useWeb3React","Heading","orderBy","partition","useI18n","usePools","useBlock","FlexLayout","Page","PoolCard","Divider","Farm","path","TranslateString","account","pools","blockNumber","stackedOnly","setStackedOnly","pool","isFinished","endBlock","finishedPools","openPools","stackedOnlyPools","filter","userData","stakedBalance","isGreaterThan","map","sousId","Hero","div","theme","colors","primary"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { usePools, useBlock } from 'state/hooks'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport Coming from './components/Coming'\r\nimport PoolCard from './components/PoolCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nconst Farm: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const pools = usePools(account)\r\n  const { blockNumber } = useBlock()\r\n  const [stackedOnly, setStackedOnly] = useState(false)\r\n\r\n  const [finishedPools, openPools] = useMemo(\r\n    () => partition(pools, (pool) => pool.isFinished || blockNumber > pool.endBlock),\r\n    [blockNumber, pools],\r\n  )\r\n  const stackedOnlyPools = useMemo(\r\n    () => openPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\r\n    [openPools],\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <Hero>\r\n        <div>\r\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\r\n            {TranslateString(738, 'Syrup Pool on ONA')}\r\n          </Heading>\r\n          <ul>\r\n            <li>{TranslateString(580, 'Stake ONA to earn new tokens.')}</li>\r\n            <li>{TranslateString(486, 'You can unstake at any time.')}</li>\r\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\r\n          </ul>\r\n        </div>\r\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\r\n      </Hero>\r\n      {/* <PoolTabButtons stackedOnly={stackedOnly} setStackedOnly={setStackedOnly} /> */}\r\n      <Divider />\r\n      <FlexLayout>\r\n        <Route exact path={`${path}`}>\r\n          <>\r\n            {stackedOnly\r\n              ? orderBy(stackedOnlyPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)\r\n              : orderBy(openPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)}\r\n            {/* <Coming /> */}\r\n          </>\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\r\n            <PoolCard key={pool.sousId} pool={pool} />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    </Page>\r\n  )\r\n}\r\n\r\nconst Hero = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: 1fr;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 250px;\r\n  padding: 48px 0;\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    font-size: 16px;\r\n    li {\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n  img {\r\n    height: auto;\r\n    max-width: 100%;\r\n  }\r\n  @media (min-width: 576px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    margin: 0;\r\n    max-width: none;\r\n  }\r\n`\r\n\r\nexport default Farm\r\n"]},"metadata":{},"sourceType":"module"}